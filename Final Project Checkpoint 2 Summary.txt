I significantly changed my approach to the problem after getting the feedback from checkpoint 1. Therefore, the goals I outlined in my project proposal are essentially irrelavent since they were based on my original plan for implementing the algorithm. For checkpoint 2, I focused on understanding neuron inhibition and how it could apply to my project. The majority of the time that I worked on my project this week was spent on messing around with inhibitory gating and creating a "blueprint" for my new approach. Thinking through this problem and drawing effective diagrams was the most challenging part of this checkpoint. In the end, I consider my checkpoint to be met, as I have a nearly completed the algorithm whose further progress is dependent on feedback. My new approach involves creating two arrays of neuron ensembles. One contains a set of 5 dimensional neurons and the other contains a set of 1 dimensional neurons with radii of 2 for the corresponding cost matrix. The 5 dimensional neurons will hold the current values of the sin and cos functions as well as the neighboring neuron ensembles from the cost matrix. The current values of the sin and cos functions will be represented through connections with inhibition nodes. Each ensemble in the "ensembleMatrix" will be connected to the corresponding ensemble in the "costMatrix" in order to apply the "calcCost" function. As mentioned, most of this has been completed. I have marked the remaining tasks with "TODO" comments. A summary of these tasks is as follows:

- Implement the inhibition in order to effectively propagate the sin and cos functions through the neuron array
- Create and connect delay nodes to delay the "calcCost" connection until the proper neighbors have been calculated
- Build the loop around the ensemble connections
- Test the code by connecting the sin and cos inputs to the first neuron ensemble